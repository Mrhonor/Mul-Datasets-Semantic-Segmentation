WARNING:__main__:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!
The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!
The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!
/root/anaconda3/envs/mdseg/lib/python3.10/site-packages/torch/distributed/distributed_c10d.py:2387: UserWarning: torch.distributed._all_gather_base is a private function and will be deprecated. Please use torch.distributed.all_gather_into_tensor instead.
  warnings.warn(
/root/anaconda3/envs/mdseg/lib/python3.10/site-packages/torch/distributed/distributed_c10d.py:2387: UserWarning: torch.distributed._all_gather_base is a private function and will be deprecated. Please use torch.distributed.all_gather_into_tensor instead.
  warnings.warn(
/root/anaconda3/envs/mdseg/lib/python3.10/site-packages/torch/distributed/distributed_c10d.py:2387: UserWarning: torch.distributed._all_gather_base is a private function and will be deprecated. Please use torch.distributed.all_gather_into_tensor instead.
  warnings.warn(
Reducer buckets have been rebuilt in this iteration.
iter: 100/100000, Cam_epoch: 0, CityScapes_epoch: 0.03326612903225806, lr: 0.004996, eta: 1 day, 15:02:44, time: 142.11, loss: 8.0310, loss_seg: 4.4066, loss_contrast: 3.6244, loss_domain:  -1.0000, kl_loss: -1.0000, loss_aux0: -1.0000, loss_aux1: -1.0000, loss_aux2: -1.0000, loss_aux3: -1.0000
iter: 200/100000, Cam_epoch: 0, CityScapes_epoch: 0.06686827956989247, lr: 0.004991, eta: 1 day, 14:26:57, time: 136.67, loss: 7.8486, loss_seg: 4.5149, loss_contrast: 3.3336, loss_domain:  -1.0000, kl_loss: -1.0000, loss_aux0: -1.0000, loss_aux1: -1.0000, loss_aux2: -1.0000, loss_aux3: -1.0000
iter: 300/100000, Cam_epoch: 0, CityScapes_epoch: 0.10047043010752688, lr: 0.004987, eta: 1 day, 14:03:10, time: 134.80, loss: 6.9925, loss_seg: 3.7710, loss_contrast: 3.2215, loss_domain:  -1.0000, kl_loss: -1.0000, loss_aux0: -1.0000, loss_aux1: -1.0000, loss_aux2: -1.0000, loss_aux3: -1.0000
iter: 400/100000, Cam_epoch: 0, CityScapes_epoch: 0.13407258064516128, lr: 0.004982, eta: 1 day, 13:54:25, time: 135.84, loss: 6.5439, loss_seg: 3.4112, loss_contrast: 3.1327, loss_domain:  -1.0000, kl_loss: -1.0000, loss_aux0: -1.0000, loss_aux1: -1.0000, loss_aux2: -1.0000, loss_aux3: -1.0000
iter: 500/100000, Cam_epoch: 0, CityScapes_epoch: 0.1676747311827957, lr: 0.004978, eta: 1 day, 13:47:41, time: 135.67, loss: 6.0986, loss_seg: 3.0749, loss_contrast: 3.0237, loss_domain:  -1.0000, kl_loss: -1.0000, loss_aux0: -1.0000, loss_aux1: -1.0000, loss_aux2: -1.0000, loss_aux3: -1.0000
iter: 600/100000, Cam_epoch: 0, CityScapes_epoch: 0.2012768817204301, lr: 0.004973, eta: 1 day, 13:46:10, time: 137.02, loss: 5.8819, loss_seg: 2.9371, loss_contrast: 2.9448, loss_domain:  -1.0000, kl_loss: -1.0000, loss_aux0: -1.0000, loss_aux1: -1.0000, loss_aux2: -1.0000, loss_aux3: -1.0000
iter: 700/100000, Cam_epoch: 0, CityScapes_epoch: 0.23487903225806453, lr: 0.004969, eta: 1 day, 13:44:42, time: 137.14, loss: 5.6161, loss_seg: 2.8064, loss_contrast: 2.8097, loss_domain:  -1.0000, kl_loss: -1.0000, loss_aux0: -1.0000, loss_aux1: -1.0000, loss_aux2: -1.0000, loss_aux3: -1.0000
iter: 800/100000, Cam_epoch: 0, CityScapes_epoch: 0.26848118279569894, lr: 0.004964, eta: 1 day, 13:47:35, time: 139.34, loss: 5.5215, loss_seg: 2.7493, loss_contrast: 2.7722, loss_domain:  -1.0000, kl_loss: -1.0000, loss_aux0: -1.0000, loss_aux1: -1.0000, loss_aux2: -1.0000, loss_aux3: -1.0000
iter: 900/100000, Cam_epoch: 0, CityScapes_epoch: 0.3020833333333333, lr: 0.004960, eta: 1 day, 13:41:05, time: 134.85, loss: 5.5141, loss_seg: 2.7579, loss_contrast: 2.7562, loss_domain:  -1.0000, kl_loss: -1.0000, loss_aux0: -1.0000, loss_aux1: -1.0000, loss_aux2: -1.0000, loss_aux3: -1.0000
iter: 1000/100000, Cam_epoch: 0, CityScapes_epoch: 0.33568548387096775, lr: 0.004955, eta: 1 day, 13:41:38, time: 138.62, loss: 5.5405, loss_seg: 2.7499, loss_contrast: 2.7906, loss_domain:  -1.0000, kl_loss: -1.0000, loss_aux0: -1.0000, loss_aux1: -1.0000, loss_aux2: -1.0000, loss_aux3: -1.0000
iter: 1100/100000, Cam_epoch: 0, CityScapes_epoch: 0.36928763440860213, lr: 0.004951, eta: 1 day, 13:41:55, time: 138.78, loss: 5.3378, loss_seg: 2.6453, loss_contrast: 2.6925, loss_domain:  -1.0000, kl_loss: -1.0000, loss_aux0: -1.0000, loss_aux1: -1.0000, loss_aux2: -1.0000, loss_aux3: -1.0000
iter: 1200/100000, Cam_epoch: 0, CityScapes_epoch: 0.40288978494623656, lr: 0.004946, eta: 1 day, 13:42:51, time: 139.57, loss: 5.2156, loss_seg: 2.5764, loss_contrast: 2.6392, loss_domain:  -1.0000, kl_loss: -1.0000, loss_aux0: -1.0000, loss_aux1: -1.0000, loss_aux2: -1.0000, loss_aux3: -1.0000
iter: 1300/100000, Cam_epoch: 0, CityScapes_epoch: 0.43649193548387094, lr: 0.004942, eta: 1 day, 13:47:11, time: 142.66, loss: 5.4833, loss_seg: 2.7222, loss_contrast: 2.7612, loss_domain:  -1.0000, kl_loss: -1.0000, loss_aux0: -1.0000, loss_aux1: -1.0000, loss_aux2: -1.0000, loss_aux3: -1.0000
iter: 1400/100000, Cam_epoch: 0, CityScapes_epoch: 0.4700940860215054, lr: 0.004937, eta: 1 day, 13:50:28, time: 142.58, loss: 5.0284, loss_seg: 2.4728, loss_contrast: 2.5556, loss_domain:  -1.0000, kl_loss: -1.0000, loss_aux0: -1.0000, loss_aux1: -1.0000, loss_aux2: -1.0000, loss_aux3: -1.0000
